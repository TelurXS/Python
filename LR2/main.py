
def task1() -> None:
    letters: str = "abcdefghijklmnopqrstuvwxyz"
    # Отримати послідовність символів від початку і до кінця.
    print("1.1) " + letters[:])

    # Отримати послідовність символів від 20-го символа і до кінця.
    print("1.2) " + letters[20:])

    # Отримати послідовність символів від 12-го символа по 15-й (15-й символ не включається).
    print("1.3) " + letters[12:15])

    # Отримати послідовність останніх 5 символів.
    print("1.4) " + letters[-5:])

    # Отримати послідовність символів від 18-го символа і до 3-го з кінця (3-й символ з кінця не включається).
    print("1.5) " + letters[18:-3])

    # Отримати послідовність символів від 6-го символа з кінця
    # і до 2-го символа з кінця (2-й символ з кінця не включається).
    print("1.6) " + letters[-6:-2])

    # Отримати кожний 7-й символ з початку і до кінця.
    print("1.7) " + letters[::7])

    # Отримати кожний 3-й символ від 4-го символа з початку і до 20-го символа (20-й символ не включається).
    print("1.8) " + letters[3:20:4])

    # Отримати кожний 4-й символ починаючи від 19-го символа і до кінця.
    print("1.9) " + letters[19::4])

    # Отримати кожний 5-й символ починаючи з початку і до 21-го символа (21-й символ не включається).
    print("1.10) " + letters[:21:4])

    # Перевернути рядок з кінця на початок. - [::−1 ]
    print("1.11) " + letters[::-1])

    # Вивести довжину рядка.
    print("1.12) " + str(len(letters)))

    return


def task2() -> None:
    # З URL адреси 'http://dl.dropbox.com/u/7334460/Magick_py/py_magick.pdf' записати у змінну file_name назву файлу,
    # що знаходиться після знаку слеша  py_magick.pdf.


    url: str = "http://dl.dropbox.com/u/7334460/Magick_py/py_magick.pdf"
    index: int = url.rfind("/")

    if index == -1:
        return

    file_name: str = url[index:].removeprefix("/")
    print(file_name)

    return


def task3() -> None:
    text: str = """   Думи мої, думи мої, Лихо мені з вами! 
    Нащо стали на папері Сумними рядами?..
    Чом вас вітер не розвіяв В степу, як пилину? 
    Чом вас лихо не приспало, Як свою дитину?... """


    # Використовуючи метод count порахуйте кількість слів.
    print(f"count: {len(text.split())}")

    # Використовуючи функцію len() визначте довжину рядка.
    print(f"length: {len(text)}")

    # Використовуючи метод strip  видаліть пробіли на початку та в кінці рядка, перезапишіть результат у змінну text.
    text = text.strip(" ")
    print("Stripped text: " + text)

    # Виріжіть з тексту рядок «Нащо стали на папері Сумними рядами?..Чом вас вітер не розвіяв В степу, як пилину? Чом
    # вас лихо не приспало, Як свою дитину?» та збережіть у змінну text1.
    text1: str = text.strip("Нащо стали на папері Сумними рядами?..Чом вас вітер не розвіяв В степу, як пилину? Чом вас"
                            " лихо не приспало, Як свою дитину?")
    print("Erased: " + text1)

    # У змінній text1 розбийте текст на рядки, використовуючи функцію split(), використовуючи у якості роздільника ‘?’.
    # Записати розділений текст у змінну splitted_text.
    splited_text: list[str] = text1.split("?")
    print(splited_text)

    # Замінити в рядку text за допомогою методу replace(): «степу» на «полі».
    text = text.replace("степу", "полі")
    print(text)

    # Знайти слово «вітер» у тексті text.
    finded_index: int = text.find("вітер")
    print(f"Finded at: {finded_index}")

    # Зробити всі літери великими.
    text = text.upper()
    print("Upper: " + text)

    # Зробити всі літери маленькими.
    text = text.lower()
    print("Lower: " + text)
    return


def task4() -> None:

    # Для змінної з номером телефону phone = +38(099)-123-12-13 за допомогою методу replace():
    # повидаляти дужки, пробіли та плюс.

    phone: str = "+38(099)-123-12-13"
    replaced: str = (phone
                     .replace("(", "")
                     .replace(")", "")
                     .replace("+", "")
                     .replace("-", ""))

    print("Replaced: " + replaced)
    return


def main() -> None:
    task1()
    task2()
    task3()
    task4()
    return


if __name__ == '__main__':
    main()
